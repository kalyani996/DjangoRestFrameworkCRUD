"""
Django settings for cfehome project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&u3-49*jj9w-vlmn#p-_)(%ufwb9t_b)c5+^v1cdfl)*o_1#ac'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # third party package
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt',
    #third party api services
    'algoliasearch_django',
    #third party packages
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #internal apps
    'api',
    'products',
    'search',
    'snippets',
    'countdowns',
    'expenses',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cfehome.urls'
CORS_URLS_REGEX = r"^/api/.*"
CORS_ALLOWED_ORIINS = []

if DEBUG:
    CORS_ALLOWED_ORIINS += [
        'http://localhost:8000',
        'https:localhost:8111',
    ]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cfehome.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# auth_classes = [
#      "rest_framework.authentication.SessionAuthentication",
#         "api.authentication.TokenAuthentication"
# ]
# if DEBUG:
#     auth_classes = [
#         "api.authentication.TokenAuthentication"
#     ]
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        # "api.authentication.TokenAuthentication",
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10
}

# JWT Specific Settings
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # How long access tokens are valid
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),    # How long refresh tokens are valid
    'ROTATE_REFRESH_TOKENS': False,                 # If True, refresh tokens are rotated after use
    'BLACKLIST_AFTER_ROTATION': False,              # If True, old refresh tokens are blacklisted
    'UPDATE_LAST_LOGIN': False,                     # If True, updates last login timestamp on user model

    'ALGORITHM': 'HS256',                           # Hashing algorithm for tokens
    'SIGNING_KEY': SECRET_KEY,                      # Uses your Django SECRET_KEY for signing
    'VERIFYING_KEY': None,                          # Can be used for asymmetric keys
    'AUDIENCE': None,                               # Audience claim
    'ISSUER': None,                                 # Issuer claim
    'JWK_URL': None,                                # JWK Set URL for public keys
    'LEEWAY': 0,                                    # Time leeway for expiration checks

    'AUTH_HEADER_TYPES': ('Bearer',),               # How the token is expected in the header
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',       # Header name
    'USER_ID_FIELD': 'id',                          # Field on the User model for ID
    'USER_ID_CLAIM': 'user_id',                     # Claim name for user ID in token
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

#environment variables -> django-dotenv -> reads .env
ALGOLIA = {
    'APPLICATION_ID': 'RXB8WARKSC',
    'API_KEY': 'dd1dcda74e8d42e1d257952e2a5772a7',
    'INDEX_PREFIX': 'cfe'
}
